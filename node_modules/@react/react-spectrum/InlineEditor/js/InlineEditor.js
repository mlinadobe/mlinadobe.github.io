"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _Textfield = _interopRequireDefault(require("../../Textfield"));

require("../style/index.css");

var _class, _class2, _temp;

var InlineEditor = (0, _convertUnsafeMethod["default"])(_class = (0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(InlineEditor, _Component);

  function InlineEditor(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, InlineEditor);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(InlineEditor).call(this, props));
    _this.state = {
      editing: !!_this.props.autoFocus,
      value: _this.props.value || _this.props.defaultValue || '',
      invalid: false
    };
    return _this;
  }

  (0, _createClass2["default"])(InlineEditor, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(props) {
      if (props.value != null && props.value !== this.props.value) {
        this.setState({
          value: props.value
        });
      }
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      this.setState({
        value: value
      });
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(e) {
      if (e.key === 'Enter') {
        this.endEditing(true);
      } else if (e.key === 'Escape') {
        this.endEditing(false);
      }
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      this.setState({
        editing: true,
        startValue: this.state.value,
        invalid: false
      });
    }
  }, {
    key: "endEditing",
    value: function () {
      var _endEditing = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        var shouldSave,
            contEditing,
            value,
            _args = arguments;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                shouldSave = _args.length > 0 && _args[0] !== undefined ? _args[0] : true;
                contEditing = false;
                value = shouldSave ? this.state.value : this.state.startValue;

                if (!(shouldSave && this.props.onChange)) {
                  _context.next = 10;
                  break;
                }

                _context.next = 6;
                return this.props.onChange(value);

              case 6:
                _context.t0 = _context.sent;
                contEditing = _context.t0 === false;
                _context.next = 11;
                break;

              case 10:
                if (!shouldSave && this.props.onCancel) {
                  this.props.onCancel();
                }

              case 11:
                this.setState({
                  editing: contEditing,
                  value: this.props.value == null ? value : this.props.value,
                  invalid: contEditing
                });

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function endEditing() {
        return _endEditing.apply(this, arguments);
      }

      return endEditing;
    }()
  }, {
    key: "focusTextfield",
    value: function focusTextfield(textfield) {
      if (textfield) {
        var input = _reactDom["default"].findDOMNode(textfield);

        input.focus();
        input.select();
      }
    }
  }, {
    key: "renderLabel",
    value: function renderLabel() {
      var _this$props = this.props,
          className = _this$props.className,
          disabled = _this$props.disabled;
      return _react["default"].createElement("span", {
        className: (0, _classnames["default"])('react-spectrum-InlineEditor', 'react-spectrum-InlineEditor-label', className),
        onDoubleClick: !disabled ? this.startEditing : undefined
      }, this.state.value);
    }
  }, {
    key: "renderEditor",
    value: function renderEditor() {
      var _this$props2 = this.props,
          className = _this$props2.className,
          props = (0, _objectWithoutProperties2["default"])(_this$props2, ["className"]);
      return _react["default"].createElement(_Textfield["default"], (0, _extends2["default"])({}, props, {
        ref: this.focusTextfield,
        className: (0, _classnames["default"])('react-spectrum-InlineEditor', 'react-spectrum-InlineEditor-input', className),
        value: this.state.value,
        onChange: this.onChange,
        onKeyDown: this.onKeyDown,
        onBlur: this.endEditing,
        invalid: this.state.invalid
      }));
    }
  }, {
    key: "render",
    value: function render() {
      return this.state.editing ? this.renderEditor() : this.renderLabel();
    }
  }]);
  return InlineEditor;
}(_react.Component), (0, _defineProperty2["default"])(_class2, "propTypes", {
  /**
   * Value component is initally set to
   */
  defaultValue: _propTypes["default"].string,

  /**
   * puts it into a controlled state
   */
  value: _propTypes["default"].string,

  /**
   * Prevents the value from being editiable, only renders value as label
   */
  disabled: _propTypes["default"].bool
}), _temp)) || _class) || _class;

exports["default"] = InlineEditor;