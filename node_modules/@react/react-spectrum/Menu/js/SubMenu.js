"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _Menu = _interopRequireDefault(require("./Menu"));

var _MenuItem = _interopRequireDefault(require("./MenuItem"));

var _OverlayTrigger = _interopRequireDefault(require("../../OverlayTrigger"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _class, _class2, _temp;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var SubMenu =
/**
 * A menu item that has a sub menu under it that is opened on hover.
 */
(0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(SubMenu, _Component);

  function SubMenu() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, SubMenu);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(SubMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      opened: false,
      trapFocus: true
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "menuId", (0, _createId["default"])());
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "subMenuId", (0, _createId["default"])());
    return _this;
  }

  (0, _createClass2["default"])(SubMenu, [{
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      var onKeyDown = this.props.onKeyDown;

      switch (event.key) {
        case 'ArrowLeft':
        case 'Left':
          event.preventDefault();
          event.stopPropagation();
          this.setState({
            opened: false
          });
          break;

        case 'Enter':
        case ' ':
        case 'ArrowRight':
        case 'Right':
          event.preventDefault();
          event.stopPropagation();
          this.setState({
            opened: true
          });
          break;
      }

      if (onKeyDown) {
        onKeyDown(event);
      }
    }
  }, {
    key: "handleSubMenuKeyDown",
    value: function handleSubMenuKeyDown(event) {
      switch (event.key) {
        case 'ArrowLeft':
        case 'Left':
          event.preventDefault();
          this.setState({
            opened: false
          });
          break;
      }
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this2 = this;

      this.hideAnimationFrame = requestAnimationFrame(function () {
        return _this2.setState({
          opened: false
        });
      });
    }
  }, {
    key: "show",
    value: function show() {
      var _this3 = this;

      if (this.hideAnimationFrame) {
        cancelAnimationFrame(this.hideAnimationFrame);
      }

      requestAnimationFrame(function () {
        return _this3.setState({
          opened: true
        });
      });

      if (this.props._onNestedSubmenuOpen) {
        this.props._onNestedSubmenuOpen();
      }
    }
  }, {
    key: "cloneItem",
    value: function cloneItem(item) {
      var props = _objectSpread({}, item.props, {
        onKeyDown: this.handleSubMenuKeyDown
      });

      if (item.type === SubMenu) {
        props._onNestedSubmenuOpen = this.show;
      }

      return (0, _react.cloneElement)(item, props);
    }
  }, {
    key: "onHide",
    value: function onHide() {
      this.hide();
    }
  }, {
    key: "onMenuClose",
    value: function onMenuClose() {
      this.overlayTrigger.hide();
    }
  }, {
    key: "onSelect",
    value: function onSelect() {
      if (this.props.closeOnSelect) {
        this.onMenuClose();
      }

      if (this.props.onSelect) {
        var _this$props;

        (_this$props = this.props).onSelect.apply(_this$props, arguments);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _this$props2 = this.props,
          children = _this$props2.children,
          className = _this$props2.className,
          closeOnSelect = _this$props2.closeOnSelect,
          label = _this$props2.label,
          trapFocus = _this$props2.trapFocus,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props2, ["children", "className", "closeOnSelect", "label", "trapFocus"]);
      delete otherProps.onSelect;
      var opened = this.state.opened;
      return _react["default"].createElement(_OverlayTrigger["default"], {
        placement: "right top",
        offset: -10,
        crossOffset: -4,
        selected: false,
        show: opened,
        onHide: this.onHide,
        closeOnSelect: closeOnSelect,
        ref: function ref(t) {
          return _this4.overlayTrigger = t;
        }
      }, _react["default"].createElement(_MenuItem["default"], (0, _extends2["default"])({
        id: this.menuId,
        className: (0, _classnames["default"])({
          'is-open': opened
        }, className),
        ref: function ref(r) {
          return _this4.menuItem = r;
        },
        "aria-haspopup": "menu",
        "aria-expanded": opened,
        "aria-owns": opened ? this.subMenuId : null
      }, otherProps, {
        onKeyDown: otherProps.disabled ? undefined : this.handleKeyDown,
        onClick: this.show,
        onMouseEnter: this.show,
        onMouseLeave: this.hide,
        hasNestedMenu: true
      }), label), _react["default"].createElement(_Menu["default"], {
        id: this.subMenuId,
        onSelect: this.onSelect,
        autoFocus: true,
        "aria-labelledby": this.menuId,
        onMouseEnter: this.show,
        onMouseLeave: this.hide,
        trapFocus: trapFocus
      }, _react["default"].Children.toArray(children).map(this.cloneItem)));
    }
  }]);
  return SubMenu;
}(_react.Component), (0, _defineProperty2["default"])(_class2, "displayName", 'SubMenu'), (0, _defineProperty2["default"])(_class2, "propTypes", _objectSpread({}, _MenuItem["default"].propTypes, {
  /**
   * A custom classname to be applied to the menu item
   */
  className: _propTypes["default"].string,

  /**
   * The displayed label of the submenu within its parent
   */
  label: _propTypes["default"].string,

  /**
   * A select handler for the submenu, triggered whenever an item is selected.
   */
  onSelect: _propTypes["default"].func,

  /**
   * True by default, this keeps focus within the expanded submenu of this component.
   * When disabled, focus may leave the expanded submenu component.
   */
  trapFocus: _propTypes["default"].bool
})), _temp)) || _class;

exports["default"] = SubMenu;