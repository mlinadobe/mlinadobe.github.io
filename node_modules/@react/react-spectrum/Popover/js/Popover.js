"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _DialogHeader = _interopRequireDefault(require("../../Dialog/js/DialogHeader"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _FocusManager = require("../../utils/FocusManager");

require("../style/index.css");

var _class, _class2, _temp;

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/popover/index.css");

  require("../../spectrum-css/popover/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/popover/index-lg.css");
} else {
  require("../../spectrum-css/popover/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/popover/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/popover/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/popover/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/popover/multiStops/darkest.css");

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/dialog/index.css");

  require("../../spectrum-css/dialog/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/dialog/index-lg.css");
} else {
  require("../../spectrum-css/dialog/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/dialog/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/dialog/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/dialog/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/dialog/multiStops/darkest.css");

var Popover = (0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Popover, _Component);

  function Popover(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Popover);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Popover).call(this, props));
    _this.defaultId = (0, _createId["default"])();
    return _this;
  }

  (0, _createClass2["default"])(Popover, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.trapFocus) {
        this._trapFocusTimeout = requestAnimationFrame(function () {
          if (_this2.popoverRef && !_this2.popoverRef.contains(document.activeElement)) {
            _this2.popoverRef.focus();
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this._trapFocusTimeout) {
        cancelAnimationFrame(this._trapFocusTimeout);
      }
    }
  }, {
    key: "onFocus",
    value: function onFocus(e) {
      if (this.props.onFocus) {
        this.props.onFocus(e);
      }

      if (this.props.trapFocus && e.target === this.popoverRef && !this.popoverRef.contains(e.relatedTarget)) {
        (0, _FocusManager.trapFocus)(this, e);
      }
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(e) {
      if (this.props.onKeyDown) {
        this.props.onKeyDown(e); // Do nothing if stopPropagation has been called on event after onKeyDown prop executes.

        if (e.isPropagationStopped && e.isPropagationStopped()) {
          return;
        }
      }

      if (this.props.trapFocus) {
        (0, _FocusManager.trapFocus)(this, e);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this,
          _classNames;

      var _this$props = this.props,
          variant = _this$props.variant,
          placement = _this$props.placement,
          arrowStyle = _this$props.arrowStyle,
          open = _this$props.open,
          title = _this$props.title,
          children = _this$props.children,
          className = _this$props.className,
          _this$props$isDialog = _this$props.isDialog,
          isDialog = _this$props$isDialog === void 0 ? true : _this$props$isDialog,
          trapFocus = _this$props.trapFocus,
          _this$props$tabIndex = _this$props.tabIndex,
          tabIndex = _this$props$tabIndex === void 0 ? null : _this$props$tabIndex,
          _this$props$id = _this$props.id,
          id = _this$props$id === void 0 ? this.defaultId : _this$props$id,
          ariaLabel = _this$props['aria-label'],
          ariaLabelledby = _this$props['aria-labelledby'],
          ariaDescribedby = _this$props['aria-describedby'],
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props, ["variant", "placement", "arrowStyle", "open", "title", "children", "className", "isDialog", "trapFocus", "tabIndex", "id", "aria-label", "aria-labelledby", "aria-describedby"]);
      delete otherProps.target;
      var content = isDialog ? _react["default"].createElement("div", {
        className: "spectrum-Dialog-content",
        role: "presentation",
        id: "".concat(id, "-content")
      }, children) : children;
      return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions
        _react["default"].createElement("div", (0, _extends2["default"])({
          ref: function ref(p) {
            return _this3.popoverRef = p;
          },
          className: (0, _classnames["default"])('spectrum-Popover', 'react-spectrum-Popover', "spectrum-Popover--".concat(placement.split(' ')[0]), (_classNames = {
            'spectrum-Popover--withTip': isDialog,
            'spectrum-Popover--dialog': isDialog
          }, (0, _defineProperty2["default"])(_classNames, "spectrum-Dialog--".concat(variant), isDialog), (0, _defineProperty2["default"])(_classNames, 'is-open', open), _classNames), className),
          role: isDialog ? 'dialog' : 'presentation',
          id: id,
          "aria-label": ariaLabel,
          "aria-labelledby": ariaLabelledby || (isDialog && title && !ariaLabel ? "".concat(id, "-heading") : null),
          "aria-describedby": ariaDescribedby || (isDialog && title && children ? "".concat(id, "-content") : null)
        }, (0, _filterDOMProps["default"])(otherProps), {
          onFocus: this.onFocus,
          onKeyDown: this.onKeyDown,
          tabIndex: trapFocus && tabIndex === null ? 1 : tabIndex
        }), isDialog && title && _react["default"].createElement(_DialogHeader["default"], {
          id: "".concat(id, "-heading"),
          title: title,
          variant: variant
        }), content, isDialog && _react["default"].createElement("div", {
          className: "spectrum-Popover-tip",
          style: arrowStyle,
          "aria-hidden": "true"
        }))
      );
    }
  }]);
  return Popover;
}(_react.Component), (0, _defineProperty2["default"])(_class2, "propTypes", {
  /**
   * The variant will affect color and add an icon.
   */
  variant: _propTypes["default"].oneOf(['default', 'error']),

  /**
   * The position of the popover. If used with overlay trigger and there isn't enough room
   * for the tooltip in that position, it will make a limited attempt to find a new position.
   */
  placement: _propTypes["default"].oneOf(['bottom', 'bottom left', 'bottom right', 'top', 'top left', 'top right', 'left', 'left top', 'left bottom', 'right', 'right top', 'right bottom']),

  /**
   * Whether the popover is opened.
   */
  open: _propTypes["default"].bool,

  /**
   * The title of the popover.
   */
  title: _propTypes["default"].node,

  /**
   * The css class name of the popover.
   */
  className: _propTypes["default"].string,

  /**
   * Whether the focus should be trapped.
   */
  trapFocus: _propTypes["default"].bool
}), (0, _defineProperty2["default"])(_class2, "defaultProps", {
  variant: 'default',
  placement: 'bottom',
  open: true,
  trapFocus: true
}), _temp)) || _class;

exports["default"] = Popover;
Popover.displayName = 'Popover';