"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classnames = _interopRequireDefault(require("classnames"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _responsive = _interopRequireDefault(require("./responsive"));

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/

/**
 * A column in a grid
 * Responsive modifiers enable specifying different column sizes, offsets, and distribution at xs, sm, md & lg viewport widths.
 */
var GridColumn =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(GridColumn, _Component);

  function GridColumn() {
    (0, _classCallCheck2["default"])(this, GridColumn);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(GridColumn).apply(this, arguments));
  }

  (0, _createClass2["default"])(GridColumn, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          children = _this$props.children,
          size = _this$props.size,
          first = _this$props.first,
          last = _this$props.last,
          offsetSize = _this$props.offsetSize,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props, ["className", "children", "size", "first", "last", "offsetSize"]);
      var classes = (0, _classnames["default"])((0, _responsive["default"])('spectrum-grid-col-#size-#value', size), (0, _responsive["default"])('spectrum-grid-col-#size-offset-#value', offsetSize), (0, _responsive["default"])('spectrum-grid-first-#size', first), (0, _responsive["default"])('spectrum-grid-last-#size', last), className);
      return _react["default"].createElement("div", (0, _extends2["default"])({
        className: classes
      }, (0, _filterDOMProps["default"])(otherProps)), children);
    }
  }]);
  return GridColumn;
}(_react.Component);

exports["default"] = GridColumn;
(0, _defineProperty2["default"])(GridColumn, "propTypes", {
  /**
   * Custom classes to append to the grid column div
   */
  className: _propTypes["default"].string,

  /**
   * How many columns to span
   */
  size: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].oneOf(['auto']), _propTypes["default"].arrayOf(_propTypes["default"].number), _propTypes["default"].shape({
    xs: _propTypes["default"].number,
    sm: _propTypes["default"].number,
    md: _propTypes["default"].number,
    lg: _propTypes["default"].number,
    xl: _propTypes["default"].number
  })]),

  /**
   * Reorders element to first depending on viewport width
   */
  first: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(['xs', 'sm', 'md', 'lg', 'xl']), _propTypes["default"].bool]),

  /**
   * Reorders element to last depending on viewport width
   */
  last: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(['xs', 'sm', 'md', 'lg', 'xl']), _propTypes["default"].bool]),

  /**
   * How many columns over should the element start, useful for blank area
   */
  offsetSize: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].arrayOf(_propTypes["default"].number), _propTypes["default"].shape({
    xs: _propTypes["default"].number,
    sm: _propTypes["default"].number,
    md: _propTypes["default"].number,
    lg: _propTypes["default"].number,
    xl: _propTypes["default"].number
  })])
});
(0, _defineProperty2["default"])(GridColumn, "defaultProps", {
  size: 'auto'
});