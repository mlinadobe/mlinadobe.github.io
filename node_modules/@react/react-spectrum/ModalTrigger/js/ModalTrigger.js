"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _events = require("../../utils/events");

var _ModalContainer = _interopRequireDefault(require("../../ModalContainer"));

var _react = _interopRequireWildcard(require("react"));

var _class;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ModalTrigger = (0, _autobindDecorator["default"])(_class =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(ModalTrigger, _Component);

  function ModalTrigger() {
    (0, _classCallCheck2["default"])(this, ModalTrigger);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ModalTrigger).apply(this, arguments));
  }

  (0, _createClass2["default"])(ModalTrigger, [{
    key: "show",
    value: function show() {
      var children = _react["default"].Children.toArray(this.props.children);

      var modalChild = children.find(function (c) {
        return c.props.modalContent;
      }) || children[children.length - 1];
      this.modalKey = _ModalContainer["default"].show(modalChild, this, this.props.container);
    }
  }, {
    key: "hide",
    value: function hide() {
      if (this.modalKey) {
        _ModalContainer["default"].hide(this.modalKey);

        this.modalKey = null;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props, ["children"]);
      children = _react["default"].Children.toArray(children);

      if (children.length < 2) {
        console.warn("ModalTrigger requires a trigger and a modal.         Number of children: ".concat(children.length, "."));
      }

      var triggerChild = children.find(function (c) {
        return c.props.modalTrigger;
      }) || children[0];
      var modalChild = children.find(function (c) {
        return c.props.modalContent;
      }) || children[children.length - 1];
      delete otherProps.container;
      var trigger = (0, _react.cloneElement)(triggerChild, _objectSpread({}, otherProps, {
        onClick: (0, _events.chain)(triggerChild.props.onClick, otherProps.onClick, this.show)
      }));

      if (children.length === 2) {
        return trigger;
      }

      var Fragment = _react["default"].Fragment || 'div';
      return _react["default"].createElement(Fragment, null, children.map(function (child) {
        if (child === triggerChild) {
          return trigger;
        } else if (child === modalChild) {
          return null;
        } else {
          return child;
        }
      }, this));
    }
  }]);
  return ModalTrigger;
}(_react.Component)) || _class;

exports["default"] = ModalTrigger;