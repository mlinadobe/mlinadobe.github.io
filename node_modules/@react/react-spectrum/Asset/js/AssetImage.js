"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _number = require("../../utils/number");

var _classnames = _interopRequireDefault(require("classnames"));

var _Image = _interopRequireDefault(require("../../Image/js/Image"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/
var PERCENTAGE_CACHE = new Map();
/*
 * An AssetImage displays an image preview within an Asset component
 */

var AssetImage =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(AssetImage, _Component);

  function AssetImage() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, AssetImage);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AssetImage)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      previewPercentage: PERCENTAGE_CACHE.get(_this.props.src) || 0
    });
    return _this;
  }

  (0, _createClass2["default"])(AssetImage, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      PERCENTAGE_CACHE["delete"](this.props.src);
    }
  }, {
    key: "calculateSize",
    value: function calculateSize(width, height) {
      if (width === 0 || height === 0) {
        return 0;
      } // smartness should be a value between 0 and 1


      var smartness = (0, _number.clamp)(this.props.smartness, 0, 1); // Any asset with an aspect ratio smaller than "smallestAspectRatio" would fit the space fully (on one side).
      // Any asset with an aspect ratio bigger than "smallestAspectRatio" would fit a percentage of the space.

      var smallestAspectRatio = 0.25; // An asset with an aspect ratio of 1 (a square) would be displayed at the "minimumPercentage" of the space.

      var minimumPercentage = 1 - smartness * 0.25; // Aspect ratio of the asset (from 0 to 1) if longest side is 1.

      var aspectRatio = width / Math.max(width, height) * height / Math.max(width, height); // Ratio (from 0 to 1) between "smallestAspectRatio" and 1 (a square).

      var ratio = Math.max(0, aspectRatio - smallestAspectRatio) / (1 - smallestAspectRatio); // Percentage of the space that the asset will fit in.

      return (1 - ratio * (1 - minimumPercentage)) * 100;
    }
  }, {
    key: "onLoad",
    value: function onLoad(img) {
      var percentage = this.calculateSize(img.naturalWidth, img.naturalHeight);
      PERCENTAGE_CACHE.set(this.props.src, percentage);

      if (percentage !== this.state.previewPercentage) {
        this.setState({
          previewPercentage: percentage
        });
      }

      if (this.props.onLoad) {
        this.props.onLoad();
      }
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this$props = this.props,
          src = _this$props.src,
          className = _this$props.className,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props, ["src", "className"]);
      var percentage = this.state.previewPercentage;
      var style = {
        maxWidth: percentage + '%',
        maxHeight: percentage + '%'
      };
      return _react["default"].createElement(_Image["default"], (0, _extends2["default"])({}, otherProps, {
        className: (0, _classnames["default"])('spectrum-Asset-image', className),
        onLoad: this.onLoad.bind(this),
        src: src,
        style: style
      }));
    }
  }]);
  return AssetImage;
}(_react.Component);

exports["default"] = AssetImage;
(0, _defineProperty2["default"])(AssetImage, "propTypes", {
  /** The image url */
  src: _propTypes["default"].string.isRequired,

  /** A factor between 0 and 1 that controls how the preview is scaled. When 0 ("dumb") the assets fits all the space available. */
  smartness: _propTypes["default"].number
});
(0, _defineProperty2["default"])(AssetImage, "defaultProps", {
  smartness: 1
});