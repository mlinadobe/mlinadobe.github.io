"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = VisuallyHidden;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classnames = _interopRequireDefault(require("classnames"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

require("../../utils/style/index.css");

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/
function VisuallyHidden(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$element = _ref.element,
      Element = _ref$element === void 0 ? 'span' : _ref$element,
      focusable = _ref.focusable,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, ["children", "className", "element", "focusable"]);
  return _react["default"].createElement(Element, (0, _extends2["default"])({
    className: (0, _classnames["default"])('u-react-spectrum-screenReaderOnly', {
      'is-focusable': focusable
    }, className)
  }, (0, _filterDOMProps["default"])(otherProps)), children);
}

VisuallyHidden.displayName = 'VisuallyHidden';
VisuallyHidden.propTypes = {
  /**
   * The css class for the visually hidden element, it's applied to the top level element.
   */
  className: _propTypes["default"].string,

  /**
   * The DOM element to use to render the visually hidden element
   */
  element: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].func]),

  /**
   * Whether the visually hidden element can become visible on keyboard focus.
   */
  focusable: _propTypes["default"].bool
};
VisuallyHidden.defaultProps = {
  element: 'span',
  focusable: false
};