"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _Button = _interopRequireDefault(require("../../Button"));

var _ChevronDownMedium = _interopRequireDefault(require("../../Icon/core/ChevronDownMedium"));

var _classnames = _interopRequireDefault(require("classnames"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _Dropdown = _interopRequireDefault(require("../../Dropdown"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _Menu = require("../../Menu");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _class;

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/splitbutton/index.css");

  require("../../spectrum-css/splitbutton/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/splitbutton/index-lg.css");
} else {
  require("../../spectrum-css/splitbutton/index.css");
}

var SplitButton = (0, _autobindDecorator["default"])(_class =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(SplitButton, _React$Component);

  function SplitButton(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, SplitButton);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SplitButton).call(this, props));
    _this.buttonId = (0, _createId["default"])();
    return _this;
  }

  (0, _createClass2["default"])(SplitButton, [{
    key: "onKeyDown",
    value: function onKeyDown(e) {
      if ((e.key === 'ArrowDown' || e.key === 'Down') && (e.altKey || e.target === _reactDom["default"].findDOMNode(this.dropdownRef.triggerRef))) {
        e.preventDefault();
        e.stopPropagation();
        this.dropdownRef.overlayTrigger.show(e);
      }

      if (this.props.onKeyDown) {
        this.props.onKeyDown(e);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          _this$props$id = _this$props.id,
          id = _this$props$id === void 0 ? this.buttonId : _this$props$id,
          onSelect = _this$props.onSelect,
          onOpen = _this$props.onOpen,
          onClose = _this$props.onClose,
          variant = _this$props.variant,
          disabled = _this$props.disabled,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props, ["children", "className", "id", "onSelect", "onOpen", "onClose", "variant", "disabled"]);
      return _react["default"].createElement(_Dropdown["default"], {
        ref: function ref(d) {
          return _this2.dropdownRef = d;
        },
        className: (0, _classnames["default"])('spectrum-SplitButton', className),
        alignRight: true,
        onSelect: onSelect,
        onOpen: onOpen,
        onClose: onClose,
        onKeyDown: this.onKeyDown,
        role: "group",
        "aria-labelledby": id
      }, _react["default"].createElement(_Button["default"], (0, _extends2["default"])({
        variant: variant
      }, (0, _filterDOMProps["default"])(otherProps), {
        disabled: disabled,
        className: "spectrum-SplitButton-action",
        id: id
      })), _react["default"].createElement(_Button["default"], {
        variant: variant,
        className: "spectrum-SplitButton-trigger",
        "aria-labelledby": id,
        disabled: disabled,
        dropdownTrigger: true
      }, _react["default"].createElement(_ChevronDownMedium["default"], {
        size: null,
        className: "spectrum-SplitButton-icon"
      })), _react["default"].createElement(_Menu.Menu, {
        "aria-labelledby": id
      }, children));
    }
  }]);
  return SplitButton;
}(_react["default"].Component)) || _class;

exports["default"] = SplitButton;
SplitButton.propTypes = {
  /** Items to render as dropdown menu items. MenuItem components are commonly used here. */
  children: _propTypes["default"].node,

  /** Function to trigger once button is selected. */
  onSelect: _propTypes["default"].func,

  /** Function to trigger when the button dropdown menu opens. */
  onOpen: _propTypes["default"].func,

  /** Function to trigger when the button dropdown menu closes. */
  onClose: _propTypes["default"].func,

  /** SplitButton variant to render. */
  variant: _propTypes["default"].oneOf(['primary', 'secondary', 'cta'])
};