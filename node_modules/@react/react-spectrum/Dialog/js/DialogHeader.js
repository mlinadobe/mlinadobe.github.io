"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = DialogHeader;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _AlertMedium = _interopRequireDefault(require("../../Icon/core/AlertMedium"));

var _Button = _interopRequireDefault(require("../../Button"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CrossLarge = _interopRequireDefault(require("../../Icon/core/CrossLarge"));

var _DialogButtons = _interopRequireDefault(require("./DialogButtons"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _Heading = _interopRequireDefault(require("../../Heading"));

var _react = _interopRequireDefault(require("react"));

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/
var VARIANT_ICONS = {
  error: _AlertMedium["default"]
};

function DialogHeader(_ref) {
  var title = _ref.title,
      variant = _ref.variant,
      fullscreen = _ref.fullscreen,
      confirmDisabled = _ref.confirmDisabled,
      confirmLabel = _ref.confirmLabel,
      secondaryLabel = _ref.secondaryLabel,
      cancelLabel = _ref.cancelLabel,
      onConfirm = _ref.onConfirm,
      onCancel = _ref.onCancel,
      onClose = _ref.onClose,
      className = _ref.className,
      autoFocusButton = _ref.autoFocusButton,
      id = _ref.id,
      isDismissible = _ref.isDismissible,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, ["title", "variant", "fullscreen", "confirmDisabled", "confirmLabel", "secondaryLabel", "cancelLabel", "onConfirm", "onCancel", "onClose", "className", "autoFocusButton", "id", "isDismissible"]);
  var Icon = VARIANT_ICONS[variant];
  return _react["default"].createElement("div", (0, _extends2["default"])({}, (0, _filterDOMProps["default"])(otherProps), {
    className: (0, _classnames["default"])('spectrum-Dialog-header', "spectrum-Dialog-header--".concat(variant), className)
  }), _react["default"].createElement(_Heading["default"], {
    size: 3,
    className: "spectrum-Dialog-title",
    id: id
  }, title), Icon && _react["default"].createElement(Icon, {
    size: null,
    className: "spectrum-Dialog-typeIcon"
  }), isDismissible && !fullscreen && _react["default"].createElement(_Button["default"], {
    className: "spectrum-Dialog-closeButton",
    variant: "action",
    onClick: onClose,
    quiet: true,
    icon: _react["default"].createElement(_CrossLarge["default"], {
      size: "L"
    })
  }), fullscreen && confirmLabel && _react["default"].createElement(_DialogButtons["default"], {
    autoFocusButton: autoFocusButton,
    variant: variant,
    cancelLabel: cancelLabel,
    secondaryLabel: secondaryLabel,
    confirmLabel: confirmLabel,
    confirmDisabled: confirmDisabled,
    onConfirm: onConfirm,
    onCancel: onCancel
  }));
}