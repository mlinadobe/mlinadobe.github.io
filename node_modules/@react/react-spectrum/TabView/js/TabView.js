"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _array = require("../../utils/array");

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _TabList = require("../../TabList");

var _TabListBase = _interopRequireDefault(require("../../TabList/js/TabListBase"));

require("../style/index.css");

var _class, _class2, _temp;

var TabView = (0, _convertUnsafeMethod["default"])(_class = (0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(TabView, _React$Component);

  function TabView(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, TabView);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(TabView).call(this, props));
    _this.tabViewId = (0, _createId["default"])();
    _this.state = {
      selectedIndex: _TabListBase["default"].getDefaultSelectedIndex(props)
    };
    return _this;
  }

  (0, _createClass2["default"])(TabView, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(props) {
      // Reset selected index when children change
      var oldChildren = _react["default"].Children.toArray(this.props.children).map(function (child) {
        return child.key;
      });

      var newChildren = _react["default"].Children.toArray(props.children).map(function (child) {
        return child.key;
      });

      if (props.selectedIndex !== this.props.selectedIndex || !(0, _array.arraysEqual)(oldChildren, newChildren)) {
        this.setState({
          selectedIndex: props.selectedIndex || 0
        });
      }
    }
  }, {
    key: "onChange",
    value: function onChange(selectedIndex) {
      if (this.props.selectedIndex == null) {
        this.setState({
          selectedIndex: selectedIndex
        });
      }

      if (this.props.onSelect) {
        this.props.onSelect(selectedIndex);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          _this$props$id = _this$props.id,
          id = _this$props$id === void 0 ? this.tabViewId : _this$props$id,
          orientation = _this$props.orientation,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["className", "id", "orientation"]);
      var tabId = id + '-tab';
      var tabPanelId = id + '-tabpanel';

      var children = _react["default"].Children.map(this.props.children, function (c, i) {
        return (0, _typeof2["default"])(c) === 'object' && c ? _react["default"].cloneElement(c, {
          'aria-controls': tabPanelId,
          id: tabId + '-' + i,
          renderChildren: false
        }) : c;
      }); // Clone children so that they get componentWillReceiveProps when clicking on the same tab


      var selected = children[this.state.selectedIndex];

      var body = _react["default"].Children.map(selected.props.children, function (c) {
        return (0, _typeof2["default"])(c) === 'object' && c ? _react["default"].cloneElement(c) : c;
      });

      return _react["default"].createElement("div", {
        className: (0, _classnames["default"])('react-spectrum-TabView', 'react-spectrum-TabView--' + orientation, className)
      }, _react["default"].createElement(_TabList.TabList, (0, _extends2["default"])({}, props, {
        orientation: orientation,
        selectedIndex: this.state.selectedIndex,
        onChange: this.onChange
      }), children), _react["default"].createElement("div", {
        className: "react-spectrum-TabView-body",
        role: "tabpanel",
        id: tabPanelId,
        "aria-labelledby": selected.props.id
      }, body));
    }
  }]);
  return TabView;
}(_react["default"].Component), (0, _defineProperty2["default"])(_class2, "propTypes", {
  /** Class to add to the tab view */
  className: _propTypes["default"].string,

  /** Id for tab view */
  id: _propTypes["default"].string,

  /** Function called when a tab is selected */
  onSelect: _propTypes["default"].func,

  /** Tab orientation */
  orientation: _propTypes["default"].oneOf(['vertical', 'horizontal']),

  /**
   * The index of the Tab that should be selected (open). When selectedIndex is
   * specified, the component is in a controlled state and a Tab can only be selected by changing the
   * selectedIndex prop value. By default, the first Tab will be selected.
   */
  selectedIndex: _propTypes["default"].number,

  /**
   * The same as selectedIndex except that the component is in an uncontrolled state.
   */
  defaultSelectedIndex: _propTypes["default"].number,

  /** Children are required */
  children: _propTypes["default"].node.isRequired
}), (0, _defineProperty2["default"])(_class2, "defaultProps", {
  id: (0, _createId["default"])(),
  orientation: 'horizontal'
}), _temp)) || _class) || _class;

exports["default"] = TabView;