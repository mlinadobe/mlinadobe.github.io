"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = DropdownButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _Button = _interopRequireDefault(require("../../Button"));

var _Dropdown = _interopRequireDefault(require("../../Dropdown"));

var _Menu = require("../../Menu");

var _More = _interopRequireDefault(require("../../Icon/More"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/
function DropdownButton(_ref) {
  var alignRight = _ref.alignRight,
      onClose = _ref.onClose,
      onOpen = _ref.onOpen,
      onSelect = _ref.onSelect,
      children = _ref.children,
      closeOnSelect = _ref.closeOnSelect,
      menuClassName = _ref.menuClassName,
      holdAffordance = _ref.holdAffordance,
      onClick = _ref.onClick,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["alignRight", "onClose", "onOpen", "onSelect", "children", "closeOnSelect", "menuClassName", "holdAffordance", "onClick"]);
  var trigger = holdAffordance ? 'longClick' : undefined;
  return _react["default"].createElement(_Dropdown["default"], {
    style: {
      display: 'inline-block'
    },
    onClose: onClose,
    onOpen: onOpen,
    onClick: onClick,
    onSelect: onSelect,
    alignRight: alignRight,
    closeOnSelect: closeOnSelect,
    trigger: trigger
  }, _react["default"].createElement(_Button["default"], (0, _extends2["default"])({
    variant: "action",
    quiet: true,
    holdAffordance: holdAffordance,
    icon: _react["default"].createElement(_More["default"], {
      alt: "\u2026"
    })
  }, props)), _react["default"].createElement(_Menu.Menu, {
    className: menuClassName,
    dropdownMenu: true
  }, children));
}

DropdownButton.propTypes = {
  /**
   * If true, dropdown will close on selection of an item
   */
  closeOnSelect: _propTypes["default"].bool,

  /**
   * Callback for when the dropdown is opened
   */
  onOpen: _propTypes["default"].func,

  /**
   * Callback for when the dropdown is closed
   */
  onClose: _propTypes["default"].func,

  /**
   * Callback for when an item is selected from the dropdown
   */
  onSelect: _propTypes["default"].func,

  /**
   * Aligns the dropdown to the right or left of the button opening the dropdown
   */
  alignRight: _propTypes["default"].bool,

  /**
   * Custom classname to apply to the Menu
   */
  menuClassName: _propTypes["default"].string,

  /**
   * Whether to activate using a long click
   */
  holdAffordance: _propTypes["default"].bool
};