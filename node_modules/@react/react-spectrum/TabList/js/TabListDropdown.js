"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _Select = _interopRequireDefault(require("../../Select"));

var _TabLine = _interopRequireDefault(require("./TabLine"));

require("../style/index.css");

var _class, _temp;

var TabListDropdown = (0, _autobindDecorator["default"])(_class = (_temp =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(TabListDropdown, _React$Component);

  function TabListDropdown() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, TabListDropdown);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(TabListDropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      selectNode: undefined,
      selectedIndex: undefined
    });
    return _this;
  }

  (0, _createClass2["default"])(TabListDropdown, [{
    key: "setSelectRef",
    value: function setSelectRef(s) {
      this.selectRef = s;
    } // It's useful to have the TabListDropdown be a separate component because the tabline needs a dom node
    // to do its calculations, we can guarantee that in componentDidMount whereas if we move this up
    // a component, it's conditionally rendered and we would need to use componentDidUpdate instead
    // with conditional logic.
    // By storing through setState, we can cause a render.

  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setState({
        selectNode: _reactDom["default"].findDOMNode(this.selectRef)
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      // this is purely so that the Tabline re-renders whenever the selection changes
      // quiet Selects change width depending on what has been selected
      // we don't want an infinite loop, so if the index matches, don't set it
      if (prevProps.selectedIndex !== this.props.selectedIndex) {
        // eslint-disable-next-line react/no-did-update-set-state
        this.setState({
          selectedIndex: this.props.selectedIndex
        });
      }
    }
  }, {
    key: "onChange",
    value: function onChange(selectedIndex) {
      this.props.onChange(Number(selectedIndex));
    }
  }, {
    key: "childrenToOptions",
    value: function childrenToOptions() {
      var options = _react["default"].Children.toArray(this.props.children).map(function (child, i) {
        var option = {};
        option.label = child.props.label || child.props.children; // value maps to the tab index, but has to be a string to be a valid select value

        option.value = i.toString();

        if (child.props.disabled) {
          option.disabled = true;
        }

        if (child.props.icon !== undefined) {
          option.icon = child.props.icon;
        }

        return option;
      });

      return options;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          selectedIndex = _this$props.selectedIndex,
          ariaLabelledby = _this$props['aria-labelledby'],
          ariaLabel = _this$props['aria-label'];
      return _react["default"].createElement("div", {
        className: (0, _classnames["default"])('spectrum-Tabs', 'spectrum-Tabs--horizontal', 'react-spectrum-Tabs--dropdown', className)
      }, _react["default"].createElement(_Select["default"], {
        quiet: true,
        flexible: true,
        ref: this.setSelectRef,
        options: this.childrenToOptions(),
        value: selectedIndex.toString(),
        onChange: this.onChange,
        "aria-labelledby": ariaLabelledby,
        "aria-label": ariaLabel
      }), this.state.selectNode && _react["default"].createElement(_TabLine["default"], {
        orientation: "horizontal",
        selectedTab: this.state.selectNode,
        selectedIndex: this.state.selectedIndex
      }));
    }
  }]);
  return TabListDropdown;
}(_react["default"].Component), _temp)) || _class;

exports["default"] = TabListDropdown;