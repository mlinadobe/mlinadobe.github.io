"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ShellWorkspace;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

require("../style/ShellWorkspace.css");

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/
function ShellWorkspace(_ref) {
  var _ref$href = _ref.href,
      href = _ref$href === void 0 ? '#' : _ref$href,
      label = _ref.label,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      className = _ref.className,
      children = _ref.children,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, ["href", "label", "selected", "className", "children"]);
  return _react["default"].createElement("a", (0, _extends2["default"])({
    className: (0, _classnames["default"])('coral3-Shell-workspaces-workspace', {
      'is-selected': selected
    }, className),
    href: href,
    selected: selected
  }, otherProps), label, children);
}

ShellWorkspace.displayName = 'ShellWorkspace';