"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Switch;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _SwitchBase = _interopRequireDefault(require("./SwitchBase"));

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/
if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/toggle/index.css");

  require("../../spectrum-css/toggle/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/toggle/index-lg.css");
} else {
  require("../../spectrum-css/toggle/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/toggle/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/toggle/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/toggle/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/toggle/multiStops/darkest.css");

function Switch(_ref) {
  var _classNames;

  var variant = _ref.variant,
      quiet = _ref.quiet,
      className = _ref.className,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, ["variant", "quiet", "className"]);
  return _react["default"].createElement(_SwitchBase["default"], (0, _extends2["default"])({
    inputType: "checkbox",
    className: (0, _classnames["default"])('spectrum-ToggleSwitch', (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "spectrum-ToggleSwitch--".concat(variant), variant), (0, _defineProperty2["default"])(_classNames, 'spectrum-ToggleSwitch--quiet', quiet), _classNames), className),
    inputClassName: "spectrum-ToggleSwitch-input",
    markClassName: "spectrum-ToggleSwitch-switch",
    labelClassName: "spectrum-ToggleSwitch-label",
    role: "switch"
  }, otherProps));
}

Switch.displayName = 'Switch';
Switch.propTypes = {
  /**
  * Class given to switch
  */
  className: _propTypes["default"].string,

  /**
  * Whether the switch is checked or not (controlled state)
  */
  checked: _propTypes["default"].bool,

  /**
  * Whether the switch should be checked (uncontrolled state)
  */
  defaultChecked: _propTypes["default"].bool,

  /** Text to add to switch. Can be Text of HTML */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object]),

  /**
  * Function called when switch is changed
  */
  onChange: _propTypes["default"].func,

  /**
  * Whether switch is a quiet variation
  */
  quiet: _propTypes["default"].bool,

  /**
  * Change switch to A/B variant rather an on/off
  */
  variant: _propTypes["default"].oneOf(['ab'])
};